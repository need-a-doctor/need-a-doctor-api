{
  "swagger": "2.0",
  "info": {
    "title": "Need-a-doctor API",
    "version": "0.0.1"
  },
  "host": "localhost:9000",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/local": {
      "post": {
        "summary": "Login with email/password",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "password",
            "in": "formData",
            "type": "string",
            "format": "password",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Token",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Error"
          },
          "404": {
            "description": "Something went wrong please try again"
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Creates a new user",
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "user name",
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "user email",
            "type": "string",
            "format": "email"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "password",
            "type": "string",
            "format": "password"
          },
          {
            "name": "confirmPassword",
            "in": "formData",
            "description": "password confirmation",
            "type": "string",
            "format": "password"
          },
          {
            "name": "role",
            "in": "formData",
            "description": "(optional) set to \"clinic-admin\" or leave empty",
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Token",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error"
          },
          "500": {
            "description": "General error"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "summary": "Get my info",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "My info",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "summary": "Updates an existing user in the DB",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "user name",
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "user email",
            "type": "string",
            "format": "email"
          },
          {
            "name": "sex",
            "in": "formData",
            "description": "user sex",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Error"
          },
          "403": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "General error"
          }
        }
      }
    },
    "/users/me/password": {
      "post": {
        "summary": "Change a users password",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "old",
            "in": "formData",
            "description": "Old password",
            "required": true,
            "type": "string",
            "format": "password"
          },
          {
            "name": "new",
            "in": "formData",
            "description": "New password",
            "required": true,
            "type": "string",
            "format": "password"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Error"
          },
          "409": {
            "description": "Validation error"
          }
        }
      }
    },
    "/users/me/clinic": {
      "get": {
        "summary": "Get clinic",
        "tags": [
          "Users",
          "Clinics"
        ],
        "responses": {
          "200": {
            "description": "Clinic entity",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/Clinic"
              }
            }
          },
          "500": {
            "description": "General error"
          }
        }
      },
      "put": {
        "summary": "Update clinic",
        "tags": [
          "Users",
          "Clinics"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "clinic name",
            "type": "string"
          },
          {
            "name": "address",
            "in": "formData",
            "description": "clinic address",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Clinic entity",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/Clinic"
              }
            }
          },
          "500": {
            "description": "General error"
          }
        }
      }
    },
    "/users/verify/{hash}": {
      "get": {
        "summary": "Verifies email for a user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "description": "hash",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Token",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Error"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/specializations": {
      "get": {
        "summary": "Returns a list of doctor specializations",
        "tags": [
          "Specializations"
        ],
        "responses": {
          "200": {
            "description": "Token",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error"
          },
          "500": {
            "description": "General error"
          }
        }
      }
    },
    "/doctors": {
      "get": {
        "summary": "Returns a list of doctors",
        "tags": [
          "Doctors"
        ],
        "responses": {
          "200": {
            "description": "Token",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error"
          },
          "500": {
            "description": "General error"
          }
        }
      }
    },
    "/doctors/{id}": {
      "get": {
        "summary": "Returns a list of doctors",
        "tags": [
          "Doctors"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "doctor id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Token",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error"
          },
          "500": {
            "description": "General error"
          }
        }
      }
    },
    "/doctors/by-specialization/{id}": {
      "get": {
        "summary": "Returns a list of doctors of specialization",
        "tags": [
          "Doctors"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "specialization id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Token",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error"
          },
          "500": {
            "description": "General error"
          }
        }
      }
    },
    "/doctors/by-clinic/{id}": {
      "get": {
        "summary": "Returns a list of doctors of clinic",
        "tags": [
          "Doctors"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "clinic id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Token",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error"
          },
          "500": {
            "description": "General error"
          }
        }
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "sex": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "validEmail": {
            "type": "boolean"
          },
          "validationHash": {
            "type": "string"
          }
        }
      },
      "Clinic": {
        "type": "object",
        "required": [
          "title",
          "owner",
          "workers"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/definitions/User"
          },
          "input": {
            "type": "object",
            "required": [
              "taxonomies"
            ],
            "properties": {
              "corpus": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "dataType": {
                "type": "string"
              },
              "taxonomies": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Taxonomy"
                }
              }
            }
          },
          "stream": {
            "type": "string"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Task"
            }
          },
          "workers": {
            "type": "number"
          },
          "amount": {
            "type": "number"
          },
          "payment": {
            "$ref": "#/definitions/Payment"
          },
          "manualApproval": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "publication": {
            "type": "object",
            "required": [
              "status"
            ],
            "properties": {
              "status": {
                "type": "string"
              },
              "startedAt": {
                "type": "string"
              }
            }
          },
          "completedAt": {
            "type": "string"
          }
        }
      },
      "ClinicParams": {
        "type": "object",
        "required": [
          "title",
          "stream",
          "amountByPhrase",
          "workers"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "stream": {
            "type": "string"
          },
          "amountByPhrase": {
            "type": "number",
            "default": 0.0001
          },
          "workers": {
            "type": "number",
            "default": 1
          },
          "manualApproval": {
            "type": "boolean",
            "default": true
          },
          "input": {
            "type": "object",
            "required": [
              "corpus",
              "taxonomies",
              "dataType"
            ],
            "properties": {
              "corpus": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "taxonomies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "dataType": {
                "type": "string",
                "default": "news"
              }
            }
          },
          "publication": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "default": "published"
              }
            }
          }
        }
      }
    }
  }
}